{"version":3,"sources":["common/NavBar.js","common/Home.js","component/trainers/TrainerCard.js","component/trainers/TrainerIndex.js","component/trainers/TrainerShow.js","component/trainers/Checkout.js","component/auth/Register.js","lib/Auth.js","component/auth/notification.js","component/auth/Login.js","common/Error.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","state","navbarOpen","toggleNavbar","setState","handleLogout","props","history","push","prevProps","this","location","pathname","className","to","onClick","React","Component","withRouter","Home","TrainerCard","name","image","price","id","src","alt","TrainerIndex","trainers","showtrainers","axios","get","res","data","console","log","length","map","trainer","key","TrainerShow","trainerId","match","params","img","description","Checkout","Register","username","email","password","passwordConfirmation","errors","handleChange","target","value","handleSubmit","e","a","preventDefault","post","response","onSubmit","placeholder","onChange","type","FrontAuth","token","localStorage","setItem","getItem","removeItem","getToken","parts","split","JSON","parse","atob","payload","getPayload","Math","round","Date","now","exp","notification","message","notify","show","background","Login","error","Auth","setToken","ErrorPage","App","NavBar","exact","path","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.904f7367.chunk.js","sourcesContent":["import React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\nclass Navbar extends React.Component {\n  state = {\n    navbarOpen: false\n  }\n  toggleNavbar = () => {\n    this.setState({ navbarOpen: !this.state.navbarOpen })\n  }\n  handleLogout = () => {\n    // auth.logout()\n    this.props.history.push('/')\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      this.setState({ navbarOpen: false })\n    }\n  }\n  render() {\n    const { navbarOpen } = this.state\n    return (\n      <nav className=\"navbar is-black\">\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <Link className=\"navbar-item is-white\" to=\"/\">Home </Link>\n            <a className={`navbar-burger is-black ${navbarOpen ? 'is-active' : ''}`} onClick={this.toggleNavbar} >\n              <span></span>\n              <span></span>\n              <span></span>\n            </a>\n          </div>\n          <div className={`navbar-menu ${navbarOpen ? 'is-active' : ''}`}>\n            <div className=\"navbar-end\">\n              <Link className=\"navbar-item\" to=\"/trainers\">Trainers</Link>\n              <Link className=\"navbar-item\" to=\"/register\">Register</Link>\n              <Link className=\"navbar-item\" to=\"/login\">Login</Link>\n              <a onClick={this.handleLogout} className=\"navbar-item\">Logout</a>\n              {/* {auth.isAuthenticated() && <Link className=\"navbar-item\" to=\"/profile\">My Profile</Link>} */}\n            </div>\n          </div>\n        </div>\n      </nav>\n    )\n  }\n}\nexport default withRouter(Navbar)\n\n\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Home = () => (\n  <section className=\"hero is-fullheight-with-navbar is-black\">\n    <div className=\"hero-body\">\n      <div className=\"container\">\n        <p className=\"main-title\"> </p>\n        <Link to={'/trainers'}>\n          <button className=\"button is-black is-medium is-rounded\">BROWSE FOOTWEAR</button>\n        </Link>\n      </div>\n    </div>\n  </section>\n)\nexport default Home","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst TrainerCard = ({ name, image, price , id }) => (\n  \n  <div className=\"column is-one-quarter-desktop is-one-third-tablet is-half-mobile\">\n    <Link to={`/trainers/${id}`}>\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h4 className=\"card-header-title\">{name}</h4>\n        </div>\n        <div className=\"card-image\">\n          <figure className=\"image\">\n            <img src={image} alt={name} />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <h5 className=\"title is-6\">{price}</h5>\n        </div>\n      </div>\n    </Link>\n  </div>\n)\nexport default TrainerCard","import React from 'react'\nimport axios from 'axios'\nimport TrainerCard from './TrainerCard'\n\n\nclass TrainerIndex extends React.Component {\n  state = {\n    trainers: [] ,\n    showtrainers: []\n  }\n  async componentDidMount() {\n    try {\n      const res = await axios.get('/api/trainers')\n      this.setState({ trainers: res.data })\n    } catch (err) {\n      console.log(err)\n      this.props.history.push('/error')\n    }\n  }\n  render() {\n    if (!this.state.trainers.length) return null\n    console.log(this.state.trainers)\n    return (\n\n      \n      <section className=\"section\">\n\n        <div className=\"container\">\n        <h1>Jeepers Sneakers </h1>\n          <div className=\"columns is-mobile is-multiline\">\n            {this.state.trainers.map(trainer =>( \n              <TrainerCard key={trainer.id} {...trainer}/>\n            ))}\n          </div>\n        </div>\n      </section>\n    )\n  }\n\n}\n\nexport default TrainerIndex","import React from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport Magnifier from 'react-magnifier'\n\n\n\nclass TrainerShow extends React.Component {\n  state = {\n    trainer: {}\n  }\n\n  async componentDidMount() {\n    const trainerId = this.props.match.params.id\n    try {\n      const res = await axios.get(`/api/trainers/${trainerId}`)\n      this.setState({ trainer: res.data })\n    } catch (err) {\n      this.props.history.push('/error')\n    }\n  }\n\n  render() {\n\n    return (\n      <>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"columns is-mobile is-multiline\">\n              {this.state.trainer &&\n                <>\n                  <div className=\"main-title-wrapper\">\n                    <h1 className=\"title car-header\">{this.state.trainer.name}</h1>\n                  </div>\n                  <div className=\"columns\">\n                    <div className=\"column is-half\">\n                      <figure className=\"image\">\n                        <Magnifier img src={this.state.trainer.image} alt={this.state.trainer.name}  />\n                      </figure>\n                    </div>\n                    <div className=\"column is-half card-text\">\n                      <h4 className=\"title is-4\">Price</h4>\n\n                      <p >{this.state.trainer.price}</p>\n\n\n                      <h4 className=\"title is-4\">Description</h4>\n                      <p>{this.state.trainer.description}</p>\n                      <hr />\n                      <Link to={'/trainers'}>\n                        <button className=\"button is-black is-medium is-rounded\">Back</button>\n                      </Link>\n                      <hr />\n                      <Link to={'/checkout'}>\n                        <button className=\"button is-black is-medium is-rounded\">Buy</button>\n                      </Link>\n                    </div>\n                  </div>\n                </>\n              }\n            </div>\n          </div>\n        </section>\n      </>\n    )\n  }\n}\n\nexport default TrainerShow","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Checkout = () => (\n  <section className=\"background\">\n    <div className=\"container container-err\">\n      <h1 className=\"header has-text-centered\"> Checkout Under Refurbishment!</h1>\n      <div className=\"checkout\">\n      <Link to={'/'}>\n          <button className=\"button is-centered is-black is-medium is-rounded\">HOME</button>\n        </Link>\n      </div>  \n\n\n    </div> \n\n  </section>\n)\n\nexport default Checkout","import React from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nclass Register extends React.Component {\n  state = {\n    data: {\n      username: '',\n      email: '',\n      password: '',\n      passwordConfirmation: '' \n    },\n    errors: {}\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    const data = { ...this.state.data, [name]: value }\n    const errors = { ...this.state.errors, [name]: '' }\n    this.setState({ data, errors })\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault()\n\n    try {\n      await axios.post('/api/register', this.state.data)\n      this.props.history.push('/login')\n    } catch (err) {\n      this.setState({ errors: err.response.data.errors })\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <form onSubmit={this.handleSubmit} className=\"column is-half is-offset-one-quarter card\">\n              <h2 className=\"title\">Register</h2>\n              <div className=\"field\">\n                <label className=\"label\">Username</label>\n                <div className=\"control\">\n                  <input\n                    className={`input ${this.state.errors.username} ? : 'is-danger' : '' `}\n                    name=\"username\"\n                    placeholder=\"Username\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {this.state.errors.username && <small className=\"help is-danger\">{this.state.errors.username}</small>}\n              </div>\n              <div className=\"field\">\n                <label className=\"label\">Email</label>\n                <div className=\"control\">\n                  <input\n                    className={`input ${this.state.errors.email} ? : 'is-danger' : '' `}\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {this.state.errors.email && <small className=\"help is-danger\">{this.state.errors.email}</small>}\n              </div>\n              <div className=\"field\">\n                <label className=\"label\">Password</label>\n                <div className=\"control\">\n                  <input\n                    className={`input ${this.state.errors.password} ? : 'is-danger' : '' `}\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {this.state.errors.password && <small className=\"help is-danger\">{this.state.errors.password}</small>}\n              </div>\n              <div className=\"field\">\n                <label className=\"label\">Password Confirmation</label>\n                <div className=\"control\">\n                  <input\n                    className={`input ${this.state.errors.passwordConfirmation} ? : 'is-danger' : '' `}\n                    name=\"passwordConfirmation\"\n                    type=\"password\"\n                    placeholder=\"Password Confirmation\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {this.state.errors.passwordConfirmation && <small className=\"help is-danger\">{this.state.errors.passwordConfirmation}</small>}\n              </div>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <Link to={'/*'}>\n                  <button type=\"submit\" className=\"button is-black is-fullwidth\">Register</button>\n                  </Link>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n  }\n\n}\n\n\nexport default Register ","class FrontAuth {\n  static setToken(token) {\n    localStorage.setItem('token', token)\n  }\n\n  static getToken() {\n    return localStorage.getItem('token')\n  }\n\n  static logout() {\n    localStorage.removeItem('token')\n  }\n\n  static getPayload() {\n    const token = this.getToken()\n    if (!token)\n      return false\n    const parts = token.split('.')\n    if (parts.length < 3)\n      return false\n    return JSON.parse(atob(parts[1]))\n  }\n\n  static isAuthenticated() {\n    const payload = this.getPayload()\n    if (!payload)\n      return false\n    const now = Math.round(Date.now() / 1000)\n    return now < payload.exp\n  }\n}\n\nexport default FrontAuth","import { notify } from 'react-notify-toast'\n\nconst notification = message => {\n  notify.show(message, 'custom', 3000, { background: '#FFFFF0' })\n}\n\nexport default notification","import React from 'react'\nimport axios from 'axios'\nimport Auth from '../../lib/Auth'\nimport notification from './notification'\nimport { Link } from 'react-router-dom'\n\nclass Login extends React.Component {\n  state = {\n    data: {\n      email: '',\n      password: ''\n    },\n    error: ''\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    const data = { ...this.state.data, [name]: value }\n    this.setState({ data, error: '' })\n  }\n  handleSubmit = async e => {\n    e.preventDefault()\n \n    try {\n      const res =  await axios.post('/api/login', this.state.data)\n      Auth.setToken(res.data.token)\n      notification(res.data.message)\n      this.props.history.push('/trainers')\n    } catch (err) {\n      this.setState({ error: 'Incorrect Credentials' })\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"section\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <form onSubmit={this.handleSubmit} className=\"column is-half is-offset-one-quarter card\">\n              <h2 className=\"title\">Login</h2>\n              <div className=\"field\">\n                <label className=\"label\">Email</label>\n                <div className=\"control\">\n                  <input\n                    className={`input ${this.state.error} ? : 'is-danger' : '' `}\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n              <div className=\"field\">\n                <label className=\"label\">Password</label>\n                <div className=\"control\">\n                  <input\n                    className={`input ${this.state.error} ? : 'is-danger' : '' `}\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {this.state.error && <small className=\"help is-danger\">{this.state.error}</small>}\n              </div>\n              <Link to={'/*'}>\n              <button type=\"submit\" className=\"button is-black is-fullwidth\">Login</button>\n              </Link>\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n  }\n\n}\n\nexport default Login","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst ErrorPage = () => (\n  <section className=\"background\">\n    <div className=\"container container-err\">\n      <h1 className=\"header has-text-centered\"> Under Refurbishment!</h1>\n      <div className=\"checkout\">\n      <Link to={'/'}>\n          <button className=\"button is-centered is-black is-medium is-rounded\">HOME</button>\n        </Link>\n      </div>  \n\n\n    </div> \n\n  </section>\n)\n\nexport default ErrorPage","import React from 'react'\n// import './App.css'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport 'bulma'\nimport NavBar from './common/NavBar'\nimport Home from './common/Home'\nimport TrainerIndex from './component/trainers/TrainerIndex'\nimport TrainerShow from './component/trainers/TrainerShow'\nimport Checkout from './component/trainers/Checkout'\nimport Register from './component/auth/Register'\nimport Login from './component/auth/Login'\nimport ErrorPage from './common/Error'\nimport './styles/main.scss'\n\n// import Checkout from './component/trainers/Checkout'\n\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <BrowserRouter>\n        <main>\n          <NavBar/>\n          <Switch>\n            <Route exact path=\"/\" component={Home}/>  \n            <Route path=\"/trainers/:id\" component={TrainerShow} />\n            <Route path=\"/trainers/\" component={TrainerIndex} />    \n            <Route exact path=\"/checkout\" component={Checkout}/> \n            <Route exact path=\"/register\" component={Register}/> \n            <Route exact path=\"/login\" component={Login}/>\n            <Route exact path=\"/*\" component={ErrorPage}/>\n\n          </Switch>\n          \n          </main>\n        </BrowserRouter>\n    )\n  }\n}\n\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}